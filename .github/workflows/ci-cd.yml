# This is a basic workflow to help you get started with Actions

name: CI-CD

on:
  workflow_dispatch
  #push:
  #  branches:
  #    - main
  #pull_request:
  #  branches:
  #    - main

jobs:
  ci:
    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build --user
        pip install flake8 black wheel twine setuptools
        pip install .
        pip install -r requirements-dev.txt
    - name: build a binary wheel & source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .
    - name: build the documentation
      run: make -C docs html
  cd:
    #only run this job if the "ci" job passes
    needs: ci
    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Step 1. Set up operating system
    runs-on: ubuntu-latest
    steps:
    # Step 2. Set up Python 3.x
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8' 
    # Step 3. Check-out repository so we can access its contents
    - uses: actions/checkout@v2
      with:
       fetch-depth: 0
    # Step 4. upgrade pip 
    - name: upgrade pip 
      run: 
       python -m pip install --upgrade pip
           
    # Step 4. Use PSR to make release
    - name: Python Semantic Release
      run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish
    # Step 6. Publish to PyPI
    - uses: pypa/gh-action-pypi-publish@release/v1
      with: 
        user: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}

    #- name: Python Semantic Release
    # uses: relekang/python-semantic-release@master
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}         
    ##- name : publish to pypi
    #  uses: pypa/gh-action-pypi-publish@release/v1
    #  with:
    #    user: ${{ secrets.PYPI_USERNAME }}
    #    password: ${{ secrets.PYPI_PASSWORD }}
        